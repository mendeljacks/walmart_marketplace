{
  "openapi": "3.0.1",
  "info": {
    "title": "Feed Management",
    "description": "Feeds are constructed to handle bulk functions. A feed consists of an HTTP request with an attached file. The attached file contains the XML representing the objects that need to be created or updated."
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    }
  ],
  "paths": {
    "/v3/ca/feeds": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "All feed statuses",
        "description": "Returns the feed statuses for all the specified Feed IDs.",
        "operationId": "getAllFeedStatuses",
        "parameters": [
          {
            "name": "feedId",
            "in": "query",
            "description": "A unique ID returned from the Bulk Upload API, used for tracking the Feed File. Special characters must be escaped. (e.g., feedId: '...3456@789...' must be entered in the URL as '...3456%40789).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The object response to start with, where 0 is the first entity that can be requested. It can only be used when includeDetails is set to true.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of entities to be returned. It cannot be more than 50 entities. Use it only when the includeDetails is set to true.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "50"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of feeds returned",
                      "format": "int64"
                    },
                    "offset": {
                      "type": "integer",
                      "description": "The object response to the starting number, where 0 is the first available",
                      "format": "int64"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "The number of items to be returned",
                      "format": "int32"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "feed": {
                          "type": "array",
                          "description": "The feed status results",
                          "items": {
                            "type": "object",
                            "properties": {
                              "feedId": {
                                "type": "string",
                                "description": "A unique ID used for tracking the Feed File"
                              },
                              "feedSource": {
                                "type": "string",
                                "description": "The source of the feed"
                              },
                              "feedType": {
                                "type": "string",
                                "description": "The feed type"
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "The seller ID"
                              },
                              "itemsReceived": {
                                "type": "integer",
                                "description": "The number of items received",
                                "format": "int64"
                              },
                              "itemsSucceeded": {
                                "type": "integer",
                                "description": "The number of items in the feed that have successfully processed",
                                "format": "int64"
                              },
                              "itemsFailed": {
                                "type": "integer",
                                "description": "The number of items in the feed that failed due to a data or system error",
                                "format": "int64"
                              },
                              "itemsProcessing": {
                                "type": "integer",
                                "description": "The number of items in the feed that are still in progress",
                                "format": "int64"
                              },
                              "feedStatus": {
                                "type": "string",
                                "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                              },
                              "feedDate": {
                                "type": "integer",
                                "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                                "format": "int64"
                              },
                              "batchId": {
                                "type": "string",
                                "description": "The batch ID for the feed, if provided"
                              },
                              "modifiedDtm": {
                                "type": "integer",
                                "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                                "format": "int64"
                              }
                            },
                            "description": "Information about the individual feed",
                            "xml": {
                              "name": "feed"
                            }
                          }
                        }
                      },
                      "description": "The feed status results"
                    }
                  },
                  "xml": {
                    "name": "list"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:list xmlns:ns2=\"http://walmart.com/\">\n    <ns2:totalResults>1</ns2:totalResults>\n    <ns2:offset>0</ns2:offset>\n    <ns2:limit>50</ns2:limit>\n    <ns2:results>\n        <ns2:feed>\n            <ns2:feedId>12234EGGT564YTEGFA@AQMBAQA</ns2:feedId>\n            <ns2:feedSource>MARKETPLACE_PARTNER</ns2:feedSource>\n            <ns2:feedType>item</ns2:feedType>\n            <ns2:partnerId>1413254255</ns2:partnerId>\n            <ns2:itemsReceived>1</ns2:itemsReceived>\n            <ns2:itemsSucceeded>1</ns2:itemsSucceeded>\n            <ns2:itemsFailed>0</ns2:itemsFailed>\n            <ns2:itemsProcessing>0</ns2:itemsProcessing>\n            <ns2:feedStatus>PROCESSED</ns2:feedStatus>\n            <ns2:feedDate>2018-07-20T21:56:12.605Z</ns2:feedDate>\n            <ns2:batchId>HP_REQUEST_BATCH</ns2:batchId>\n            <ns2:modifiedDtm>2018-07-20T21:56:17.948Z</ns2:modifiedDtm>\n            <ns2:fileName>ItemFeed99_ParadiseCounty_paperback.xml</ns2:fileName>\n            <ns2:itemDataErrorCount>0</ns2:itemDataErrorCount>\n            <ns2:itemSystemErrorCount>0</ns2:itemSystemErrorCount>\n            <ns2:itemTimeoutErrorCount>0</ns2:itemTimeoutErrorCount>\n            <ns2:channelType>WM_TEST</ns2:channelType>\n        </ns2:feed>\n    </ns2:results>\n</ns2:list>"
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of feeds returned",
                      "format": "int64"
                    },
                    "offset": {
                      "type": "integer",
                      "description": "The object response to the starting number, where 0 is the first available",
                      "format": "int64"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "The number of items to be returned",
                      "format": "int32"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "feed": {
                          "type": "array",
                          "description": "The feed status results",
                          "items": {
                            "type": "object",
                            "properties": {
                              "feedId": {
                                "type": "string",
                                "description": "A unique ID used for tracking the Feed File"
                              },
                              "feedSource": {
                                "type": "string",
                                "description": "The source of the feed"
                              },
                              "feedType": {
                                "type": "string",
                                "description": "The feed type"
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "The seller ID"
                              },
                              "itemsReceived": {
                                "type": "integer",
                                "description": "The number of items received",
                                "format": "int64"
                              },
                              "itemsSucceeded": {
                                "type": "integer",
                                "description": "The number of items in the feed that have successfully processed",
                                "format": "int64"
                              },
                              "itemsFailed": {
                                "type": "integer",
                                "description": "The number of items in the feed that failed due to a data or system error",
                                "format": "int64"
                              },
                              "itemsProcessing": {
                                "type": "integer",
                                "description": "The number of items in the feed that are still in progress",
                                "format": "int64"
                              },
                              "feedStatus": {
                                "type": "string",
                                "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                              },
                              "feedDate": {
                                "type": "integer",
                                "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                                "format": "int64"
                              },
                              "batchId": {
                                "type": "string",
                                "description": "The batch ID for the feed, if provided"
                              },
                              "modifiedDtm": {
                                "type": "integer",
                                "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                                "format": "int64"
                              }
                            },
                            "description": "Information about the individual feed",
                            "xml": {
                              "name": "feed"
                            }
                          }
                        }
                      },
                      "description": "The feed status results"
                    }
                  },
                  "xml": {
                    "name": "list"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feeds"
        ],
        "summary": "Content feeds",
        "description": "Once the XML request is built using the Content Feeds XSDs, you can pass the payload using the Content Feed API.You must use the relevant category XSD to build the XML payload..",
        "operationId": "bulkContentSetup",
        "parameters": [
          {
            "name": "feedType",
            "in": "query",
            "description": "The feed Type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "CONTENT_PRODUCT"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "requestBody": {
          "description": "Feed file to upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "xml1": {
                  "value": "<ContentProductFeed xmlns=\"http://walmart.com/content\">\n    <ContentProductFeedHeader>\n        <version>3.0</version>\n    </ContentProductFeedHeader>\n    <ContentProduct>\n        <sku>02782382027292</sku>\n        <SkuUpdate>No</SkuUpdate>\n        <productName>\n            KIND Bars, Nuts and Spices Bar, Dark Chocolate Cinnamon Pecan, 1.4 oz, 12/Box\n        </productName>\n        <productIdentifiers>\n            <productIdentifier>\n                <productIdType>GTIN</productIdType>\n                <productId>02782382027292</productId>\n            </productIdentifier>\n            <productIdentifier>\n                <productIdType>UPC</productIdType>\n                <productId>278238202729</productId>\n            </productIdentifier>\n        </productIdentifiers>\n        <category>\n            <FoodAndBeverageCategory>\n                <FoodAndBeverage>\n                    <shortDescription>\n                        Kind Bar, Dark Chocolate Cinnamon Pecan - Mfg Part No. 602652177521\n                    </shortDescription>\n                    <keyFeatures>\n                        <keyFeaturesValue>\n                            Ingredients You Can See and Pronounce. ONLY 5g SUGAR7g FIBER / 6g PROTEIN .All Natural / NON GMO. Gluten Free. No Sugar Alcohols. Low Glycemic .Low Sodium .No Trans Fats .No Sulphur Dioxide. No Hydrogenated Oils Kosher\n                        </keyFeaturesValue>\n                        <keyFeaturesValue>All Natural / NON GMO</keyFeaturesValue>\n                        <keyFeaturesValue>7g fiber. 6g protein. Only 5g sugar</keyFeaturesValue>\n                        <keyFeaturesValue>So go on, have your KIND and eat it too!</keyFeaturesValue>\n                    </keyFeatures>\n                    <unitsPerConsumerUnit>6</unitsPerConsumerUnit>\n                    <brand>Kind</brand>\n                    <manufacturer>Nestle</manufacturer>\n                    <mainImageUrl>\n                        http://i5.walmartimages.com/asr/99eb373e-3041-4a0b-9846-53e0260f8b10_1.5c4c950aae18d21febf427a72d42ad01.jpeg?odnHeight=180&amp;odnWidth=180&amp;odnBg=ffffff\n                    </mainImageUrl>\n                    <isPrivateLabelOrUnbranded>Yes</isPrivateLabelOrUnbranded>\n                    <exclusiveBrandsIndicator>Yes</exclusiveBrandsIndicator>\n                    <isProp65WarningRequired>Yes</isProp65WarningRequired>\n                    <prop65WarningText>\n                        Many food and beverage cans have linings containing bisphenol A (BPA), a chemical known to the State of California to cause harm to the female reproductive system. Jar lids and bottle caps may also contain BPA. You can be exposed to BPA when you consume foods or beverages packaged in these containers. For more information go to: www.P65Warnings.ca.gov/BPA.\n                    </prop65WarningText>\n                    <hasExpiration>Yes</hasExpiration>\n                    <shelfLife>\n                        <measure>500</measure>\n                        <unit>days</unit>\n                    </shelfLife>\n                    <hasPricePerUnit>Yes</hasPricePerUnit>\n                    <pricePerUnitQuantity>1.80</pricePerUnitQuantity>\n                    <pricePerUnitUom>Ounce</pricePerUnitUom>\n                    <hasGMOs>No</hasGMOs>\n                    <isTemperatureSensitive>No</isTemperatureSensitive>\n                    <hasStateRestrictions>No</hasStateRestrictions>\n                    <isIntendedForHumanConsumption>Yes</isIntendedForHumanConsumption>\n                    <isNutritionFactsLabelRequired>Yes</isNutritionFactsLabelRequired>\n                    <nutritionFactsLabel>\n                        http://www.mymreviews.com/wp-content/uploads/2014/02/KIND-Nutrition2.jpg\n                    </nutritionFactsLabel>\n                    <nutritionIngredientsImage>\n                        http://www.mymreviews.com/wp-content/uploads/2014/02/KIND-Nutrition2.jpg\n                    </nutritionIngredientsImage>\n                    <hasIngredientList>Yes</hasIngredientList>\n                    <ingredientListImage>\n                        http://www.mymreviews.com/wp-content/uploads/2014/02/KIND-Nutrition2.jpg\n                    </ingredientListImage>\n                    <isPerishable>No</isPerishable>\n                    <containerType>\n                        <containerTypeValue>box</containerTypeValue>\n                    </containerType>\n                    <isGmoFree>Yes</isGmoFree>\n                    <servingSize>1 bar</servingSize>\n                    <servingsPerContainer>12.00</servingsPerContainer>\n                    <calories>\n                        <measure>200</measure>\n                        <unit>Calories</unit>\n                    </calories>\n                    <caloriesFromFat>\n                        <measure>20</measure>\n                        <unit>Calories</unit>\n                    </caloriesFromFat>\n                    <totalFat>\n                        <measure>8.00</measure>\n                        <unit>g</unit>\n                    </totalFat>\n                    <totalFatPercentageDailyValue>20.00</totalFatPercentageDailyValue>\n                    <fatCaloriesPerGram>\n                        <measure>20</measure>\n                        <unit>Calories</unit>\n                    </fatCaloriesPerGram>\n                    <nutrients>\n                        <nutrient>\n                            <nutrientName>Calcium</nutrientName>\n                            <nutrientAmount>12g</nutrientAmount>\n                            <nutrientPercentageDailyValue>20</nutrientPercentageDailyValue>\n                        </nutrient>\n                    </nutrients>\n                    <foodForm>Bars</foodForm>\n                    <isImitation>No</isImitation>\n                    <usdaInspected>Yes</usdaInspected>\n                    <hasHighFructoseCornSyrup>No</hasHighFructoseCornSyrup>\n                    <foodAllergenStatements>\n                        <foodAllergenStatement>Contains nuts</foodAllergenStatement>\n                    </foodAllergenStatements>\n                    <caffeineDesignation>Naturally Decaffeinated</caffeineDesignation>\n                </FoodAndBeverage>\n            </FoodAndBeverageCategory>\n        </category>\n    </ContentProduct>\n</ContentProductFeed>\n"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <feedId>E9C04D1FFD99479FBC1341D56DD5F930@AQMB_wA</feedId>\n</FeedAcknowledgement>\n"
              }
            }
          }
        }
      }
    },
    "/v3/ca/feeds/{feedId}": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "Get feed and item status",
        "description": "You can display the status of an item within a feed. Use the feed ID returned from the upload an item API.",
        "operationId": "getFeedItemStatus",
        "parameters": [
          {
            "name": "feedId",
            "in": "path",
            "description": "The feed ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDetails",
            "in": "query",
            "description": "Includes details of each entity in the feed. Do not set this parameter to true.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The object response to start with, where 0 is the first entity that can be requested. It can only be used when includeDetails is set to true.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of entities to be returned. It cannot be more than 50 entities. Use it only when the includeDetails is set to true.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "50"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID used for tracking the Feed File"
                    },
                    "feedStatus": {
                      "type": "string",
                      "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR",
                      "enum": [
                        "RECEIVED",
                        "INPROGRESS",
                        "PROCESSED",
                        "ERROR"
                      ]
                    },
                    "ingestionErrors": {
                      "type": "object",
                      "properties": {
                        "ingestionError": {
                          "type": "array",
                          "items": {
                            "required": [
                              "code",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Error Type",
                                "enum": [
                                  "DATA_ERROR",
                                  "SYSTEM_ERROR",
                                  "TIMEOUT_ERROR"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "description": "Error code"
                              },
                              "description": {
                                "type": "string",
                                "description": "Error description"
                              }
                            }
                          }
                        }
                      },
                      "description": "List of errors for an item"
                    },
                    "itemsReceived": {
                      "type": "integer",
                      "description": "The number of items received in the feed",
                      "format": "int32"
                    },
                    "itemsSucceeded": {
                      "type": "integer",
                      "description": "The number of items in the feed that processed successfully",
                      "format": "int32"
                    },
                    "itemsFailed": {
                      "type": "integer",
                      "description": "The number of items in the feed that failed due to a data or system error",
                      "format": "int32"
                    },
                    "itemsProcessing": {
                      "type": "integer",
                      "description": "The number of items in the feed that are still processing",
                      "format": "int32"
                    },
                    "offset": {
                      "type": "integer",
                      "description": "The object response to the starting number, where 0 is the first entity available for request",
                      "format": "int32"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "The number of items returned. Cannot be greater than 1000.",
                      "format": "int32"
                    },
                    "itemDetails": {
                      "type": "object",
                      "properties": {
                        "itemIngestionStatus": {
                          "type": "array",
                          "description": "The ingestion status of an individual item",
                          "items": {
                            "required": [
                              "ingestionStatus"
                            ],
                            "type": "object",
                            "properties": {
                              "martId": {
                                "type": "integer",
                                "description": "Mart ID that a user or seller uses for a marketplace",
                                "format": "int32"
                              },
                              "sku": {
                                "type": "string",
                                "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                              },
                              "wpid": {
                                "type": "string",
                                "description": "An alphanumeric product ID, generated by Walmart"
                              },
                              "index": {
                                "type": "integer",
                                "description": "index of items in the feed",
                                "format": "int32"
                              },
                              "ingestionStatus": {
                                "type": "string",
                                "description": "Can be one of the following: DATA_ERROR, SYSTEM_ERROR, TIMEOUT_ERROR, or INPROGRESS",
                                "enum": [
                                  "INPROGRESS",
                                  "SUCCESS",
                                  "DATA_ERROR",
                                  "SYSTEM_ERROR",
                                  "TIMEOUT_ERROR"
                                ]
                              },
                              "ingestionErrors": {
                                "type": "object",
                                "properties": {
                                  "ingestionError": {
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "code",
                                        "type"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Error Type",
                                          "enum": [
                                            "DATA_ERROR",
                                            "SYSTEM_ERROR",
                                            "TIMEOUT_ERROR"
                                          ]
                                        },
                                        "code": {
                                          "type": "string",
                                          "description": "Error code"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Error description"
                                        }
                                      }
                                    }
                                  }
                                },
                                "description": "List of errors for an item"
                              }
                            },
                            "description": "The ingestion status of an individual item"
                          }
                        }
                      },
                      "description": "List of ingestion status details for items in the feed"
                    }
                  },
                  "xml": {
                    "name": "PartnerFeedResponse"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:PartnerFeedResponse xmlns:ns2=\"http://walmart.com/\">\n    <ns2:feedId>640787F441ASSFF1C4FB7BB749E20C0A3</ns2:feedId>\n    <ns2:feedStatus>PROCESSED</ns2:feedStatus>\n    <ns2:feedSubmissionDate>2018-07-20T21:56:12.605Z</ns2:feedSubmissionDate>\n    <ns2:itemsReceived>1</ns2:itemsReceived>\n    <ns2:itemsSucceeded>1</ns2:itemsSucceeded>\n    <ns2:itemsFailed>0</ns2:itemsFailed>\n    <ns2:itemsProcessing>0</ns2:itemsProcessing>\n    <ns2:offset>0</ns2:offset>\n    <ns2:limit>50</ns2:limit>\n    <ns2:itemDetails>\n        <ns2:itemIngestionStatus>\n            <ns2:martId>0</ns2:martId>\n            <ns2:sku>234325346-8fbf-4fa0-a70c-2424rfwefq</ns2:sku>\n            <ns2:wpid>7K69FC732QRRE5KTFS</ns2:wpid>\n            <ns2:index>0</ns2:index>\n            <ns2:itemid>24234</ns2:itemid>\n            <ns2:productIdentifiers>\n                <ns2:productIdentifier>\n                    <ns2:productIdType>GTIN</ns2:productIdType>\n                    <ns2:productId>086756453</ns2:productId>\n                </ns2:productIdentifier>\n                <ns2:productIdentifier>\n                    <ns2:productIdType>ISBN</ns2:productIdType>\n                    <ns2:productId>13432543634</ns2:productId>\n                </ns2:productIdentifier>\n            </ns2:productIdentifiers>\n            <ns2:ingestionStatus>SUCCESS</ns2:ingestionStatus>\n        </ns2:itemIngestionStatus>\n    </ns2:itemDetails>\n</ns2:PartnerFeedResponse>"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Cause": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Cause"
        }
      },
      "FeedRecord": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID used for tracking the Feed File"
          },
          "feedSource": {
            "type": "string",
            "description": "The source of the feed"
          },
          "feedType": {
            "type": "string",
            "description": "The feed type"
          },
          "partnerId": {
            "type": "string",
            "description": "The seller ID"
          },
          "itemsReceived": {
            "type": "integer",
            "description": "The number of items received",
            "format": "int64"
          },
          "itemsSucceeded": {
            "type": "integer",
            "description": "The number of items in the feed that have successfully processed",
            "format": "int64"
          },
          "itemsFailed": {
            "type": "integer",
            "description": "The number of items in the feed that failed due to a data or system error",
            "format": "int64"
          },
          "itemsProcessing": {
            "type": "integer",
            "description": "The number of items in the feed that are still in progress",
            "format": "int64"
          },
          "feedStatus": {
            "type": "string",
            "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
          },
          "feedDate": {
            "type": "integer",
            "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
            "format": "int64"
          },
          "batchId": {
            "type": "string",
            "description": "The batch ID for the feed, if provided"
          },
          "modifiedDtm": {
            "type": "integer",
            "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
            "format": "int64"
          }
        },
        "description": "Information about the individual feed",
        "xml": {
          "name": "feed"
        }
      },
      "FeedRecordResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "error"
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                },
                "errorIdentifiers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "component": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceName": {
                  "type": "string"
                },
                "gatewayErrorCategory": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_DATA_ERROR",
                    "EXTERNAL_DATA_ERROR",
                    "SYSTEM_ERROR"
                  ]
                }
              },
              "xml": {
                "name": "GatewayError"
              }
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of feeds returned",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "The object response to the starting number, where 0 is the first available",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "The number of items to be returned",
            "format": "int32"
          },
          "results": {
            "type": "object",
            "properties": {
              "feed": {
                "type": "array",
                "description": "The feed status results",
                "items": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID used for tracking the Feed File"
                    },
                    "feedSource": {
                      "type": "string",
                      "description": "The source of the feed"
                    },
                    "feedType": {
                      "type": "string",
                      "description": "The feed type"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "The seller ID"
                    },
                    "itemsReceived": {
                      "type": "integer",
                      "description": "The number of items received",
                      "format": "int64"
                    },
                    "itemsSucceeded": {
                      "type": "integer",
                      "description": "The number of items in the feed that have successfully processed",
                      "format": "int64"
                    },
                    "itemsFailed": {
                      "type": "integer",
                      "description": "The number of items in the feed that failed due to a data or system error",
                      "format": "int64"
                    },
                    "itemsProcessing": {
                      "type": "integer",
                      "description": "The number of items in the feed that are still in progress",
                      "format": "int64"
                    },
                    "feedStatus": {
                      "type": "string",
                      "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                    },
                    "feedDate": {
                      "type": "integer",
                      "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                      "format": "int64"
                    },
                    "batchId": {
                      "type": "string",
                      "description": "The batch ID for the feed, if provided"
                    },
                    "modifiedDtm": {
                      "type": "integer",
                      "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                      "format": "int64"
                    }
                  },
                  "description": "Information about the individual feed",
                  "xml": {
                    "name": "feed"
                  }
                }
              }
            },
            "description": "The feed status results"
          }
        },
        "xml": {
          "name": "list"
        }
      },
      "GatewayError": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SYSTEM",
              "REQUEST",
              "DATA"
            ]
          },
          "causes": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Cause"
              }
            }
          },
          "errorIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "component": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "gatewayErrorCategory": {
            "type": "string",
            "enum": [
              "INTERNAL_DATA_ERROR",
              "EXTERNAL_DATA_ERROR",
              "SYSTEM_ERROR"
            ]
          }
        },
        "xml": {
          "name": "GatewayError"
        }
      },
      "ResultRecord": {
        "type": "object",
        "properties": {
          "feed": {
            "type": "array",
            "description": "The feed status results",
            "items": {
              "type": "object",
              "properties": {
                "feedId": {
                  "type": "string",
                  "description": "A unique ID used for tracking the Feed File"
                },
                "feedSource": {
                  "type": "string",
                  "description": "The source of the feed"
                },
                "feedType": {
                  "type": "string",
                  "description": "The feed type"
                },
                "partnerId": {
                  "type": "string",
                  "description": "The seller ID"
                },
                "itemsReceived": {
                  "type": "integer",
                  "description": "The number of items received",
                  "format": "int64"
                },
                "itemsSucceeded": {
                  "type": "integer",
                  "description": "The number of items in the feed that have successfully processed",
                  "format": "int64"
                },
                "itemsFailed": {
                  "type": "integer",
                  "description": "The number of items in the feed that failed due to a data or system error",
                  "format": "int64"
                },
                "itemsProcessing": {
                  "type": "integer",
                  "description": "The number of items in the feed that are still in progress",
                  "format": "int64"
                },
                "feedStatus": {
                  "type": "string",
                  "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                },
                "feedDate": {
                  "type": "integer",
                  "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                  "format": "int64"
                },
                "batchId": {
                  "type": "string",
                  "description": "The batch ID for the feed, if provided"
                },
                "modifiedDtm": {
                  "type": "integer",
                  "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                  "format": "int64"
                }
              },
              "description": "Information about the individual feed",
              "xml": {
                "name": "feed"
              }
            }
          }
        },
        "description": "The feed status results"
      },
      "FeedRecordResponse_json": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "error"
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                },
                "errorIdentifiers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "component": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceName": {
                  "type": "string"
                },
                "gatewayErrorCategory": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_DATA_ERROR",
                    "EXTERNAL_DATA_ERROR",
                    "SYSTEM_ERROR"
                  ]
                }
              },
              "xml": {
                "name": "GatewayError"
              }
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of feeds returned",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "The object response to the starting number, where 0 is the first available",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "The number of items to be returned",
            "format": "int32"
          },
          "results": {
            "type": "object",
            "properties": {
              "feed": {
                "type": "array",
                "description": "The feed status results",
                "items": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID used for tracking the Feed File"
                    },
                    "feedSource": {
                      "type": "string",
                      "description": "The source of the feed"
                    },
                    "feedType": {
                      "type": "string",
                      "description": "The feed type"
                    },
                    "partnerId": {
                      "type": "string",
                      "description": "The seller ID"
                    },
                    "itemsReceived": {
                      "type": "integer",
                      "description": "The number of items received",
                      "format": "int64"
                    },
                    "itemsSucceeded": {
                      "type": "integer",
                      "description": "The number of items in the feed that have successfully processed",
                      "format": "int64"
                    },
                    "itemsFailed": {
                      "type": "integer",
                      "description": "The number of items in the feed that failed due to a data or system error",
                      "format": "int64"
                    },
                    "itemsProcessing": {
                      "type": "integer",
                      "description": "The number of items in the feed that are still in progress",
                      "format": "int64"
                    },
                    "feedStatus": {
                      "type": "string",
                      "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                    },
                    "feedDate": {
                      "type": "integer",
                      "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                      "format": "int64"
                    },
                    "batchId": {
                      "type": "string",
                      "description": "The batch ID for the feed, if provided"
                    },
                    "modifiedDtm": {
                      "type": "integer",
                      "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                      "format": "int64"
                    }
                  },
                  "description": "Information about the individual feed",
                  "xml": {
                    "name": "feed"
                  }
                }
              }
            },
            "description": "The feed status results"
          }
        },
        "xml": {
          "name": "list"
        }
      },
      "ResultRecord_json": {
        "type": "object",
        "properties": {
          "feed": {
            "type": "array",
            "description": "The feed status results",
            "items": {
              "type": "object",
              "properties": {
                "feedId": {
                  "type": "string",
                  "description": "A unique ID used for tracking the Feed File"
                },
                "feedSource": {
                  "type": "string",
                  "description": "The source of the feed"
                },
                "feedType": {
                  "type": "string",
                  "description": "The feed type"
                },
                "partnerId": {
                  "type": "string",
                  "description": "The seller ID"
                },
                "itemsReceived": {
                  "type": "integer",
                  "description": "The number of items received",
                  "format": "int64"
                },
                "itemsSucceeded": {
                  "type": "integer",
                  "description": "The number of items in the feed that have successfully processed",
                  "format": "int64"
                },
                "itemsFailed": {
                  "type": "integer",
                  "description": "The number of items in the feed that failed due to a data or system error",
                  "format": "int64"
                },
                "itemsProcessing": {
                  "type": "integer",
                  "description": "The number of items in the feed that are still in progress",
                  "format": "int64"
                },
                "feedStatus": {
                  "type": "string",
                  "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section."
                },
                "feedDate": {
                  "type": "integer",
                  "description": "The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz",
                  "format": "int64"
                },
                "batchId": {
                  "type": "string",
                  "description": "The batch ID for the feed, if provided"
                },
                "modifiedDtm": {
                  "type": "integer",
                  "description": "The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz",
                  "format": "int64"
                }
              },
              "description": "Information about the individual feed",
              "xml": {
                "name": "feed"
              }
            }
          }
        },
        "description": "The feed status results"
      },
      "IngestionError": {
        "required": [
          "code",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Error Type",
            "enum": [
              "DATA_ERROR",
              "SYSTEM_ERROR",
              "TIMEOUT_ERROR"
            ]
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "description": {
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "IngestionErrors": {
        "type": "object",
        "properties": {
          "ingestionError": {
            "type": "array",
            "items": {
              "required": [
                "code",
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Error Type",
                  "enum": [
                    "DATA_ERROR",
                    "SYSTEM_ERROR",
                    "TIMEOUT_ERROR"
                  ]
                },
                "code": {
                  "type": "string",
                  "description": "Error code"
                },
                "description": {
                  "type": "string",
                  "description": "Error description"
                }
              }
            }
          }
        },
        "description": "List of errors for an item"
      },
      "ItemDetails": {
        "type": "object",
        "properties": {
          "itemIngestionStatus": {
            "type": "array",
            "description": "The ingestion status of an individual item",
            "items": {
              "required": [
                "ingestionStatus"
              ],
              "type": "object",
              "properties": {
                "martId": {
                  "type": "integer",
                  "description": "Mart ID that a user or seller uses for a marketplace",
                  "format": "int32"
                },
                "sku": {
                  "type": "string",
                  "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                },
                "wpid": {
                  "type": "string",
                  "description": "An alphanumeric product ID, generated by Walmart"
                },
                "index": {
                  "type": "integer",
                  "description": "index of items in the feed",
                  "format": "int32"
                },
                "ingestionStatus": {
                  "type": "string",
                  "description": "Can be one of the following: DATA_ERROR, SYSTEM_ERROR, TIMEOUT_ERROR, or INPROGRESS",
                  "enum": [
                    "INPROGRESS",
                    "SUCCESS",
                    "DATA_ERROR",
                    "SYSTEM_ERROR",
                    "TIMEOUT_ERROR"
                  ]
                },
                "ingestionErrors": {
                  "type": "object",
                  "properties": {
                    "ingestionError": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Error Type",
                            "enum": [
                              "DATA_ERROR",
                              "SYSTEM_ERROR",
                              "TIMEOUT_ERROR"
                            ]
                          },
                          "code": {
                            "type": "string",
                            "description": "Error code"
                          },
                          "description": {
                            "type": "string",
                            "description": "Error description"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of errors for an item"
                }
              },
              "description": "The ingestion status of an individual item"
            }
          }
        },
        "description": "List of ingestion status details for items in the feed"
      },
      "PartnerFeedResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "error"
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                },
                "errorIdentifiers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "component": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceName": {
                  "type": "string"
                },
                "gatewayErrorCategory": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_DATA_ERROR",
                    "EXTERNAL_DATA_ERROR",
                    "SYSTEM_ERROR"
                  ]
                }
              },
              "xml": {
                "name": "GatewayError"
              }
            }
          },
          "feedId": {
            "type": "string",
            "description": "A unique ID used for tracking the Feed File"
          },
          "feedStatus": {
            "type": "string",
            "description": "Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR",
            "enum": [
              "RECEIVED",
              "INPROGRESS",
              "PROCESSED",
              "ERROR"
            ]
          },
          "ingestionErrors": {
            "type": "object",
            "properties": {
              "ingestionError": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error Type",
                      "enum": [
                        "DATA_ERROR",
                        "SYSTEM_ERROR",
                        "TIMEOUT_ERROR"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Error description"
                    }
                  }
                }
              }
            },
            "description": "List of errors for an item"
          },
          "itemsReceived": {
            "type": "integer",
            "description": "The number of items received in the feed",
            "format": "int32"
          },
          "itemsSucceeded": {
            "type": "integer",
            "description": "The number of items in the feed that processed successfully",
            "format": "int32"
          },
          "itemsFailed": {
            "type": "integer",
            "description": "The number of items in the feed that failed due to a data or system error",
            "format": "int32"
          },
          "itemsProcessing": {
            "type": "integer",
            "description": "The number of items in the feed that are still processing",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "The object response to the starting number, where 0 is the first entity available for request",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "The number of items returned. Cannot be greater than 1000.",
            "format": "int32"
          },
          "itemDetails": {
            "type": "object",
            "properties": {
              "itemIngestionStatus": {
                "type": "array",
                "description": "The ingestion status of an individual item",
                "items": {
                  "required": [
                    "ingestionStatus"
                  ],
                  "type": "object",
                  "properties": {
                    "martId": {
                      "type": "integer",
                      "description": "Mart ID that a user or seller uses for a marketplace",
                      "format": "int32"
                    },
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                    },
                    "wpid": {
                      "type": "string",
                      "description": "An alphanumeric product ID, generated by Walmart"
                    },
                    "index": {
                      "type": "integer",
                      "description": "index of items in the feed",
                      "format": "int32"
                    },
                    "ingestionStatus": {
                      "type": "string",
                      "description": "Can be one of the following: DATA_ERROR, SYSTEM_ERROR, TIMEOUT_ERROR, or INPROGRESS",
                      "enum": [
                        "INPROGRESS",
                        "SUCCESS",
                        "DATA_ERROR",
                        "SYSTEM_ERROR",
                        "TIMEOUT_ERROR"
                      ]
                    },
                    "ingestionErrors": {
                      "type": "object",
                      "properties": {
                        "ingestionError": {
                          "type": "array",
                          "items": {
                            "required": [
                              "code",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Error Type",
                                "enum": [
                                  "DATA_ERROR",
                                  "SYSTEM_ERROR",
                                  "TIMEOUT_ERROR"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "description": "Error code"
                              },
                              "description": {
                                "type": "string",
                                "description": "Error description"
                              }
                            }
                          }
                        }
                      },
                      "description": "List of errors for an item"
                    }
                  },
                  "description": "The ingestion status of an individual item"
                }
              }
            },
            "description": "List of ingestion status details for items in the feed"
          }
        },
        "xml": {
          "name": "PartnerFeedResponse"
        }
      },
      "PartnerItemIngestionStatus": {
        "required": [
          "ingestionStatus"
        ],
        "type": "object",
        "properties": {
          "martId": {
            "type": "integer",
            "description": "Mart ID that a user or seller uses for a marketplace",
            "format": "int32"
          },
          "sku": {
            "type": "string",
            "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
          },
          "wpid": {
            "type": "string",
            "description": "An alphanumeric product ID, generated by Walmart"
          },
          "index": {
            "type": "integer",
            "description": "index of items in the feed",
            "format": "int32"
          },
          "ingestionStatus": {
            "type": "string",
            "description": "Can be one of the following: DATA_ERROR, SYSTEM_ERROR, TIMEOUT_ERROR, or INPROGRESS",
            "enum": [
              "INPROGRESS",
              "SUCCESS",
              "DATA_ERROR",
              "SYSTEM_ERROR",
              "TIMEOUT_ERROR"
            ]
          },
          "ingestionErrors": {
            "type": "object",
            "properties": {
              "ingestionError": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Error Type",
                      "enum": [
                        "DATA_ERROR",
                        "SYSTEM_ERROR",
                        "TIMEOUT_ERROR"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Error description"
                    }
                  }
                }
              }
            },
            "description": "List of errors for an item"
          }
        },
        "description": "The ingestion status of an individual item"
      },
      "FeedId": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
          },
          "additionalAttributes": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    }
  }
}