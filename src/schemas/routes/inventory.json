{
  "openapi": "3.0.1",
  "info": {
    "title": "Inventory Management",
    "description": "Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you."
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    }
  ],
  "paths": {
    "/v3/ca/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Inventory",
        "description": "You can use this API to get the inventory for a given item.",
        "operationId": "getInventory",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item. This will be used by the seller in the XSD file to refer to each item.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "required": [
                    "fulfillmentLagTime",
                    "quantity",
                    "sku"
                  ],
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                    },
                    "quantity": {
                      "required": [
                        "amount",
                        "unit"
                      ],
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement. Example: 'EACH'",
                          "enum": [
                            "EACH"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "The number available in the inventory"
                        }
                      },
                      "description": "Information about the quantity in inventory"
                    },
                    "fulfillmentLagTime": {
                      "type": "integer",
                      "description": "The number of days between when the item is ordered and when it is shipped",
                      "format": "int32"
                    },
                    "partnerId": {
                      "type": "string"
                    },
                    "offerId": {
                      "type": "string"
                    }
                  },
                  "xml": {
                    "name": "inventory"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<inventory xmlns:ns2=\"http://walmart.com/\">\n    <sku>1068155</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>23</amount>\n    </quantity>\n    <fulfillmentLagTime>1</fulfillmentLagTime>\n</inventory>"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Inventory"
        ],
        "summary": "Update inventory",
        "description": "Updates the inventory for a given item.",
        "operationId": "updateInventoryForAnItemCA",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "An arbitrary alphanumeric unique ID, specified by the seller, identifying each item.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "requestBody": {
          "description": "File fields",
          "content": {
            "application/xml": {
              "schema": {
                "required": [
                  "fulfillmentLagTime",
                  "quantity",
                  "sku"
                ],
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                  },
                  "quantity": {
                    "required": [
                      "amount",
                      "unit"
                    ],
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string",
                        "description": "The unit of measurement. Example: 'EACH'",
                        "enum": [
                          "EACH"
                        ]
                      },
                      "amount": {
                        "type": "number",
                        "description": "The number available in the inventory"
                      }
                    },
                    "description": "Information about the quantity in inventory"
                  },
                  "fulfillmentLagTime": {
                    "type": "integer",
                    "description": "The number of days between when the item is ordered and when it is shipped",
                    "format": "int32"
                  },
                  "partnerId": {
                    "type": "string"
                  },
                  "offerId": {
                    "type": "string"
                  }
                },
                "xml": {
                  "name": "inventory"
                }
              },
              "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<inventory xmlns=\"http://walmart.com/\">\n    <sku>1068155</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>3</amount>\n    </quantity>\n    <fulfillmentLagTime>1</fulfillmentLagTime>\n</inventory>"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "required": [
                    "fulfillmentLagTime",
                    "quantity",
                    "sku"
                  ],
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
                    },
                    "quantity": {
                      "required": [
                        "amount",
                        "unit"
                      ],
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement. Example: 'EACH'",
                          "enum": [
                            "EACH"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "The number available in the inventory"
                        }
                      },
                      "description": "Information about the quantity in inventory"
                    },
                    "fulfillmentLagTime": {
                      "type": "integer",
                      "description": "The number of days between when the item is ordered and when it is shipped",
                      "format": "int32"
                    },
                    "partnerId": {
                      "type": "string"
                    },
                    "offerId": {
                      "type": "string"
                    }
                  },
                  "xml": {
                    "name": "inventory"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<inventory xmlns:ns2=\"http://walmart.com/\">\n    <sku>1068155</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>23</amount>\n    </quantity>\n    <fulfillmentLagTime>1</fulfillmentLagTime>\n</inventory>"
              }
            }
          }
        }
      }
    },
    "/v3/ca/feeds": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Bulk update",
        "description": "Updates inventory for items in bulk. Refer to the throttling limits before uploading the Feed files",
        "operationId": "updateBulkInventory",
        "parameters": [
          {
            "name": "feedType",
            "in": "query",
            "description": "Includes details of each entity in the feed. Do not set this parameter to true.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "inventory"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "requestBody": {
          "description": "Feed file to upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "xml1": {
                  "value": "<InventoryFeed xmlns=\"http://walmart.com/\">\n    <InventoryHeader>\n        <version>1.4</version>\n    </InventoryHeader>\n    <inventory>\n        <sku>1068155</sku>\n        <quantity>\n            <unit>EACH</unit>\n            <amount>10</amount>\n        </quantity>\n        <fulfillmentLagTime>1</fulfillmentLagTime>\n    </inventory>\n    <inventory>\n        <sku>10210321</sku>\n        <quantity>\n            <unit>EACH</unit>\n            <amount>20</amount>\n        </quantity>\n        <fulfillmentLagTime>1</fulfillmentLagTime>\n    </inventory>\n</InventoryFeed>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <feedId>E9C04D1FFD99479FBC1341D56DD5F930@AQMB_wA</feedId>\n</FeedAcknowledgement>"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InventoryV2": {
        "required": [
          "fulfillmentLagTime",
          "quantity",
          "sku"
        ],
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "An arbitrary alphanumeric unique ID, seller-specified, identifying each item."
          },
          "quantity": {
            "required": [
              "amount",
              "unit"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "type": "string",
                "description": "The unit of measurement. Example: 'EACH'",
                "enum": [
                  "EACH"
                ]
              },
              "amount": {
                "type": "number",
                "description": "The number available in the inventory"
              }
            },
            "description": "Information about the quantity in inventory"
          },
          "fulfillmentLagTime": {
            "type": "integer",
            "description": "The number of days between when the item is ordered and when it is shipped",
            "format": "int32"
          },
          "partnerId": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          }
        },
        "xml": {
          "name": "inventory"
        }
      },
      "QuantityV2": {
        "required": [
          "amount",
          "unit"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of measurement. Example: 'EACH'",
            "enum": [
              "EACH"
            ]
          },
          "amount": {
            "type": "number",
            "description": "The number available in the inventory"
          }
        },
        "description": "Information about the quantity in inventory"
      },
      "FeedId": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
          },
          "additionalAttributes": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    }
  }
}