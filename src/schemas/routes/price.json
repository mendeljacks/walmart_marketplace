{
  "openapi": "3.0.1",
  "info": {
    "title": "Price Management",
    "description": "The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item"
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    }
  ],
  "paths": {
    "/v3/ca/price": {
      "put": {
        "tags": [
          "Prices"
        ],
        "summary": "Update a price",
        "description": "Updates the regular price for a given item.",
        "operationId": "updatePriceCA",
        "parameters": [
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              },
              "example": "<Price xmlns=\"http://walmart.com/\">\n    <itemIdentifier>\n        <sku>sku-656666666</sku>\n    </itemIdentifier>\n    <pricingList>\n        <pricing>\n            <currentPrice>\n                <value currency=\"USD\" amount=\"4.00\" />\n            </currentPrice>\n        </pricing>\n    </pricingList>\n</Price>"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "mart": {
                      "type": "string",
                      "description": "Marketplace name. Example: Walmart-CA"
                    },
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item."
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency type. Example: USD for US Dollars"
                    },
                    "amount": {
                      "type": "string",
                      "description": "The numerical amount of the price. Example: 9.99"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message of acknowledgement for a price update"
                    }
                  },
                  "xml": {
                    "name": "MpItemPriceResponse"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ns2:ItemPriceResponse xmlns:ns2=\"http://walmart.com/\">\n    <ns2:mart>WALMART_US</ns2:mart>\n    <ns2:sku>VEX1437_9507240_9507247</ns2:sku>\n    <ns2:currency>USD</ns2:currency>\n    <ns2:amount>10.000</ns2:amount>\n    <ns2:message>Thank you. Your price has been updated. Please allow up to five minutes for this change to be reflected on the site.</ns2:message>\n</ns2:ItemPriceResponse>"
              }
            }
          }
        }
      }
    },
    "/v3/ca/feeds": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Update bulk prices",
        "description": "Updates prices in bulk.",
        "operationId": "priceBulkUploads",
        "parameters": [
          {
            "name": "feedType",
            "in": "query",
            "description": "The feed Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "name": "WM_SEC.TIMESTAMP",
            "in": "header",
            "description": "The Epoch timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1443748249449"
          },
          {
            "name": "WM_SEC.AUTH_SIGNATURE",
            "in": "header",
            "description": "The vendor's digital signature, generated by running the JAR file or custom generation code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9fg3TPeRt0WSGbXNGGj4kSQ9L6PMBX.....9Zj5aDyg="
          },
          {
            "name": "WM_CONSUMER.ID",
            "in": "header",
            "description": "A unique ID required to access the API",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Get the Consumer ID from Developer Center after logging in"
          }
        ],
        "requestBody": {
          "description": "Feed file to upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "xml1": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PriceFeed xmlns=\"http://walmart.com/\">\n    <PriceHeader>\n        <version>1.5.1</version>\n    </PriceHeader>\n    <Price>\n        <itemIdentifier>\n            <sku>sku-656666666</sku>\n        </itemIdentifier>\n        <pricingList>\n            <pricing>\n                <currentPrice>\n                    <value currency=\"USD\" amount=\"4.00\"/>\n                </currentPrice>\n            </pricing>\n        </pricingList>\n    </Price>\n    <Price>\n        <itemIdentifier>\n            <sku>sku-656666667</sku>\n        </itemIdentifier>\n        <pricingList>\n            <pricing>\n                <currentPrice>\n                    <value currency=\"USD\" amount=\"4.00\"/>\n                </currentPrice>\n            </pricing>\n        </pricingList>\n    </Price>\n</PriceFeed>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <ns2:feedId>55DE8A53B09F41BBBF261C1AB5FB2BC8@AVMBAgA</ns2:feedId>\n</ns2:FeedAcknowledgement>"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Cause": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Cause"
        }
      },
      "GatewayError": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SYSTEM",
              "REQUEST",
              "DATA"
            ]
          },
          "causes": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Cause"
              }
            }
          },
          "errorIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "component": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "gatewayErrorCategory": {
            "type": "string",
            "enum": [
              "INTERNAL_DATA_ERROR",
              "EXTERNAL_DATA_ERROR",
              "SYSTEM_ERROR"
            ]
          }
        },
        "xml": {
          "name": "GatewayError"
        }
      },
      "MPItemPriceResponseV2": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "error"
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                },
                "errorIdentifiers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "component": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceName": {
                  "type": "string"
                },
                "gatewayErrorCategory": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_DATA_ERROR",
                    "EXTERNAL_DATA_ERROR",
                    "SYSTEM_ERROR"
                  ]
                }
              },
              "xml": {
                "name": "GatewayError"
              }
            }
          },
          "mart": {
            "type": "string",
            "description": "Marketplace name. Example: Walmart-CA"
          },
          "sku": {
            "type": "string",
            "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item."
          },
          "currency": {
            "type": "string",
            "description": "The currency type. Example: USD for US Dollars"
          },
          "amount": {
            "type": "string",
            "description": "The numerical amount of the price. Example: 9.99"
          },
          "message": {
            "type": "string",
            "description": "A message of acknowledgement for a price update"
          }
        },
        "xml": {
          "name": "MpItemPriceResponse"
        }
      },
      "FeedId": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
          },
          "additionalAttributes": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    }
  }
}